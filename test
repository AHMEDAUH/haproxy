# Pipeline Documentation: Build Custom OS Images

## Overview
This pipeline allows users to build custom OS images based on the latest release with a set of client-specific customizations. The process is automated through Jenkins, and users can easily input their account information, service name, and other required details.

---

## 1. Prerequisites

Before using the pipeline, ensure the following:

- You have access to the Jenkins server running the pipeline.
- You have a **GitHub account** and access to the repository where the OS image source code is stored.
- Ensure you have the necessary **account credentials** (username, password, account ID, etc.) to customize the image.

---

## 2. Input Parameters

To use the pipeline, you'll need to provide the following input parameters:

- **Account Name:** The name of the user account.
- **Account ID:** The unique identifier for the user account.
- **Account User:** The username used for authentication.
- **Account Password:** The password associated with the user account.
- **Service Name:** The name of the service you want the custom OS image to be based on.

---

## 3. Steps to Trigger the Pipeline

1. **Access the Jenkins Dashboard:**
   - Navigate to the Jenkins web interface and log in with your credentials.
   
2. **Select the OS Image Build Pipeline:**
   - In the Jenkins dashboard, locate the pipeline for building the OS image (e.g., *"Custom OS Image Build"*).
   
3. **Enter Input Parameters:**
   - When you trigger the pipeline, you will be prompted to enter the required input parameters (account name, ID, password, and service name). 

4. **Start the Build:**
   - Click **Build Now** to start the process. The pipeline will fetch the latest release from GitHub, use the provided parameters, and start building the OS image.

5. **Monitor the Build:**
   - You can monitor the progress of the build via the Jenkins UI. The log will show detailed information about each step of the build process.

---

## 4. What Happens During the Build?

- **Source Code Fetching:**
   - The pipeline automatically fetches the latest release from the GitHub repository. It can track the latest tag or commit to ensure the OS image is based on the most recent version.

