# --- Clusters en présence ---
clusters = a, b

# Bootstrap des clusters (TLS sans SASL)
a.bootstrap.servers=broker-a1.mydomain:9093,broker-a2.mydomain:9093
b.bootstrap.servers=broker-b1.mydomain:9093,broker-b2.mydomain:9093

# Sécurité : TLS uniquement (certificats AC reconnue -> pas de truststore nécessaire)
a.security.protocol=SSL
b.security.protocol=SSL
# Si tu as des CAs custom, dé-commente et fournis un truststore (monté via volume) :
# a.ssl.truststore.location=/etc/mm2/truststore.jks
# a.ssl.truststore.password=<changeit>
# b.ssl.truststore.location=/etc/mm2/truststore.jks
# b.ssl.truststore.password=<changeit>

# --- Direction A -> B ---
a->b.enabled=true

# Réplication de tous les topics métier (exclusion des internes)
a->b.topics=.*
a->b.topics.blacklist=^(__.*|_confluent\..*|_schemas)$

# Sans préfixe sur B (toujours prudence si des topics homonymes existent déjà sur B)
replication.policy.class=org.apache.kafka.connect.mirror.IdentityReplicationPolicy

# Réplication des offsets / checkpointers (DR)
emit.heartbeats.enabled=true
emit.checkpoints.enabled=true
sync.group.offsets.enabled=true
groups=.*
# Optionnel : fréquence de sync offsets (par défaut 60s)
offset.syncs.topic.location=b
offset.syncs.topic.replication.factor=3
refresh.topics.enabled=true
refresh.topics.interval.seconds=60
refresh.groups.enabled=true
refresh.groups.interval.seconds=60
refresh.interval.seconds=60

# Réplication des configs de topics (utile pour conserver les partitions/retentions)
sync.topic.configs.enabled=true
# Pas d’ACLs (SASL off). Si tu avais des ACLs, tu pourrais activer :
# sync.topic.acls.enabled=true

# Création des topics sur B si absent
replication.factor=3
offsets.sync.out.of.sync.threshold=1000

# Fiabilité / perf
# a->b.emit.heartbeats.interval.seconds=5
# tasks.max=4
# producer.max.request.size=10485760
# consumer.max.partition.fetch.bytes=10485760
